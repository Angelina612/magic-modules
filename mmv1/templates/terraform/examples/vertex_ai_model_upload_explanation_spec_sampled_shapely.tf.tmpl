resource "google_vertex_ai_models" "<%= ctx[:primary_resource_id] %>" {
  model_name = "{{index $.Vars "sampled_shapley_model_name"}}"
  description  = "sample description"
  artifact_uri = "gs://cloud-samples-data/vertex-ai/google-cloud-aiplatform-ci-artifacts/models/iris_xgboost/"

  container_spec {
    image_uri = "us-docker.pkg.dev/vertex-ai/prediction/xgboost-cpu.1-5:latest"
    command   = ["sample", "command"]
    args      = ["sample", "args"]
    deployment_timeout = "60s"
    shared_memory_size_mb = 10
    
    env {
      name  = "env_one"
      value = "value_one"
    }

    ports {
      container_port = 8080
    }

    grpc_ports {
      container_port = 8080
    }

    health_route = "/health"
    predict_route = "/predict"

    health_probe {
      exec {
        command = ["pwd"]
      }
      period_seconds = 30
      timeout_seconds = 1
    }

    startup_probe {
      exec {
        command = ["pwd"]
      }
      period_seconds = 30
      timeout_seconds = 1
    }
  }

  explanation_spec {
    metadata {
      inputs {
        name = "test"
        input_tensor_name = "test"
        encoding = "IDENTITY"
        modality = "numeric"
        group_name = "test"
        indices_tensor_name = "test"
        dense_shape_tensor_name = "test"
        encoded_tensor_name = "test"
        encoded_baselines = [1]
        index_feature_mapping = ["test"]

        feature_value_domain {
          min_value = 1
          max_value = 1
          original_mean = 1
          original_stddev = 1
        }

        visualization {
          type = "PIXELS"
          clip_percent_lowerbound = 1
          clip_percent_upperbound = 1
          color_map = "PINK_GREEN"
          polarity = "POSITIVE"
          overlay_type = "GRAYSCALE"
        }
      }

      outputs {
        name = "test"
        output_tensor_name = "test"
        display_name_mapping_key = "test"
      }

      latent_space_source = "test"
    }

    parameters {
      sampled_shapley_attribution {
        path_count = 1
      }
      output_indices = [1]
      top_k = 1
    }
  }

  region = "us-central1"
}